# -*- coding: utf-8 -*-
"""dummy data generation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lFfhN02XniZDxAmFejjEwVKJA_TpQORj
"""

import pandas as pd
import numpy as np
import uuid
import gspread
import time
from google.colab import auth
from google.auth import default

# Authenticate with Google Sheets
auth.authenticate_user()
creds, _ = default()
gc = gspread.authorize(creds)

# Open or create the Google Sheet
spreadsheet_name = "supervised_dataset"
try:
    sh = gc.open(spreadsheet_name)
except gspread.exceptions.SpreadsheetNotFound:
    sh = gc.create(spreadsheet_name)
    sh.share('sdsdgaming5@gmail.com', perm_type='user', role='writer')

worksheet = sh.sheet1

# Define updated categorical values
ip_types = ['default', 'datacenter']
sources = ['E', 'F']

# Function to generate a new dummy entry with specified format
def generate_dummy_entry():
    return [
        str(uuid.uuid4()),  # _id
        format(np.random.uniform(0.000000001, 1), '.9f'),  # inter_api_access_duration(sec) - 9 dp float
        format(np.random.uniform(0, 1), '.9f'),  # api_access_uniqueness - 9 dp float
        format(np.random.uniform(0, 3310), '.8f'),  # sequence_length(count) - 8 dp float
        np.random.randint(1, 20000001),  # vsession_duration(min)
        np.random.choice(ip_types),  # ip_type
        np.random.randint(1, 10001),  # num_sessions
        np.random.randint(1, 9001),  # num_users
        np.random.randint(0, 256),  # num_unique_apis
        np.random.choice(sources)  # source
    ]

# Add headers if the sheet is empty
if not worksheet.get_all_values():
    headers = [
        "_id", "inter_api_access_duration(sec)", "api_access_uniqueness",
        "sequence_length(count)", "vsession_duration(min)", "ip_type",
        "num_sessions", "num_users", "num_unique_apis", "source"
    ]
    worksheet.append_row(headers)

# Continuous data generation loop
while True:
    new_entry = generate_dummy_entry()
    worksheet.append_row(new_entry)
    print("New data appended to Google Sheets.")
    time.sleep(600)